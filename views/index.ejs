<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css">
  <style>
    :root {
      /* Primary Brand Colors */
      --brand-primary: #1d3e8f;      /* Deeper blue - main brand color */
      --brand-secondary: #3965c0;    /* Medium blue - secondary brand color */
      --brand-accent: #4ac3be;       /* Teal accent color - for highlights */
      
      /* UI Colors */
      --ui-background: #f7f9fc;      /* Very light blue-gray for background */
      --ui-card: #ffffff;            /* White for cards */
      --ui-border: #e4e9f2;          /* Light gray for borders */
      --ui-hover: #f2f6fb;           /* Very light blue for hover states */
      
      /* Status Colors */
      --status-planned: #e9ecef;     /* Light gray for planned status */
      --status-generated: #ffeecc;   /* Soft yellow for generated status */
      --status-approved: #dcf5e8;    /* Soft green for approved status */
      --status-published: #e0f0ff;   /* Soft blue for published status */
      
      /* Text Colors */
      --text-primary: #2e3a59;       /* Dark blue-gray for primary text */
      --text-secondary: #6e7891;     /* Medium gray for secondary text */
      --text-light: #8f9bb3;         /* Light gray for tertiary text */
    }
    
    body {
      background-color: var(--ui-background);
      color: var(--text-primary);
    }
    
    .navbar {
      background-color: var(--brand-primary) !important;
      box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }
    
    .card {
      background-color: var(--ui-card);
      border-radius: 8px;
      box-shadow: 0 2px 8px rgba(23, 43, 77, 0.07);
      margin-bottom: 20px;
      border: none;
    }
    
    .content-table tr {
      transition: all 0.2s ease;
      border-bottom: 1px solid var(--ui-border);
    }
    
    .content-table tbody tr:hover {
      background-color: var(--ui-hover);
      cursor: pointer;
    }
    
    .content-table td {
      padding: 16px 12px;
      vertical-align: middle;
    }
    
    .platform-pill {
      padding: 5px 12px;
      border-radius: 50px;
      font-size: 0.85rem;
      font-weight: 500;
      background-color: rgba(57, 101, 192, 0.1);
      color: var(--brand-secondary);
      display: inline-block;
    }
    
    .status-pill {
      padding: 5px 12px;
      border-radius: 50px;
      font-size: 0.85rem;
      font-weight: 500;
      display: inline-block;
    }
    
    .status-planned {
      background-color: var(--status-planned);
      color: #495057;
    }
    
    .status-generated {
      background-color: var(--status-generated);
      color: #805b10;
    }
    
    .status-approved {
      background-color: var(--status-approved);
      color: #0d6e49;
    }
    
    .status-published {
      background-color: var(--status-published);
      color: #1a5fb4;
    }
    
    .btn-action {
      padding: 0.375rem 0.75rem;
      font-size: 0.85rem;
    }
    
    .content-filters {
      border-bottom: 1px solid var(--ui-border);
      margin-bottom: 1rem;
    }
    
    .filter-link {
      color: var(--text-secondary);
      padding: 0.5rem 1rem;
      text-decoration: none;
      position: relative;
      display: inline-block;
      font-weight: 500;
      transition: color 0.2s;
    }
    
    .filter-link.active {
      color: var(--brand-secondary);
      font-weight: 600;
    }
    
    .filter-link:hover {
      color: var(--brand-primary);
    }
    
    .filter-link.active:after {
      content: '';
      position: absolute;
      bottom: -1px;
      left: 0;
      right: 0;
      height: 2px;
      background-color: var(--brand-accent);
    }
    
    .title-cell a {
      color: var(--text-primary);
      text-decoration: none;
      font-weight: 500;
      transition: color 0.2s;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      display: inline-block;
      max-width: 300px;
    }
    
    .title-cell a:hover {
      color: var(--brand-secondary);
    }
    
    .action-buttons .btn-sm {
      border-radius: 6px;
      margin-left: 8px;
      transition: all 0.2s ease;
    }
    
    /* Button hover effects with elevation */
    .btn:hover {
      transform: translateY(-1px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
    
    .action-buttons {
      white-space: nowrap;
      min-width: 150px;
    }
    
    .header-actions {
      display: flex;
      gap: 10px;
    }
    
    .main-content {
      padding: 2rem 0;
    }
    
    .navbar-brand {
      font-weight: 600;
      font-size: 1.4rem;
    }
    
    .btn-primary {
      background-color: var(--brand-primary);
      border-color: var(--brand-primary);
    }
    
    .btn-primary:hover, .btn-primary:focus {
      background-color: var(--brand-secondary);
      border-color: var(--brand-secondary);
    }
    
    .btn-success {
      background-color: #0d6e49;
      border-color: #0d6e49;
    }
    
    .btn-outline-primary {
      border-color: var(--brand-primary);
      color: var(--brand-primary);
    }
    
    .btn-outline-primary:hover {
      background-color: var(--brand-primary);
      color: white;
    }
    
    .btn-outline-secondary {
      border-color: var(--text-secondary);
      color: var(--text-secondary);
    }
    
    .btn-outline-secondary:hover {
      background-color: var(--text-secondary);
      color: white;
    }
    
    .btn-outline-danger {
      border-color: #b02a37;
      color: #b02a37;
    }
    
    .btn-outline-danger:hover {
      background-color: #b02a37;
      color: white;
    }
    
    .btn-outline-light {
      border-color: rgba(255, 255, 255, 0.7);
      color: rgba(255, 255, 255, 0.9);
    }
    
    .btn-outline-light:hover {
      background-color: rgba(255, 255, 255, 0.1);
      color: white;
    }
    
    /* Table styling */
    .table > :not(caption) > * > * {
      padding: 0.75rem 1rem;
    }
    
    .table thead th {
      font-weight: 600;
      color: var(--text-secondary);
      border-bottom: 1px solid var(--ui-border);
      text-transform: uppercase;
      font-size: 0.8rem;
      letter-spacing: 0.5px;
    }
    
    /* Modal styling */
    .modal-content {
      border: none;
      border-radius: 12px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    }
    
    .modal-header {
      border-bottom-color: var(--ui-border);
    }
    
    .modal-footer {
      border-top-color: var(--ui-border);
    }
    
    .form-control, .form-select {
      border-color: var(--ui-border);
      border-radius: 6px;
    }
    
    .form-control:focus, .form-select:focus {
      border-color: var(--brand-secondary);
      box-shadow: 0 0 0 0.25rem rgba(57, 101, 192, 0.15);
    }
    
    .input-group-text {
      background-color: rgba(57, 101, 192, 0.05);
      border-color: var(--ui-border);
      color: var(--text-secondary);
    }
    
    /* Show more button */
    .show-more-btn {
      font-size: 0.8rem;
      color: var(--brand-secondary);
      background: none;
      border: none;
      padding: 0 0 0 5px;
      cursor: pointer;
      vertical-align: middle;
    }
    
    .show-more-btn:hover {
      color: var(--brand-primary);
      text-decoration: underline;
    }
    
    /* Divider line between rows */
    .content-table tbody tr td {
      border-bottom: 1px solid transparent;
      border-top: 1px solid transparent;
    }
    
    .content-table tbody tr:hover td {
      border-bottom: 1px solid var(--ui-border);
      border-top: 1px solid var(--ui-border);
    }
    
    /* Update and add new styles for the redesigned dashboard */
    
    /* Content section styling */
    .content-section {
      margin-bottom: 2rem;
    }
    
    .section-header {
      display: flex;
      align-items: center;
      margin-bottom: 1rem;
      padding-bottom: 0.75rem;
      border-bottom: 1px solid var(--ui-border);
    }
    
    .section-title {
      font-size: 1.25rem;
      font-weight: 600;
      margin-bottom: 0;
      color: var(--text-primary);
    }
    
    .count-badge {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      background-color: var(--brand-secondary);
      color: white;
      border-radius: 50px;
      font-size: 0.8rem;
      font-weight: 500;
      height: 24px;
      min-width: 24px;
      padding: 0 8px;
      margin-left: 10px;
    }
    
    /* Content grid layout */
    .content-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 1.5rem;
    }
    
    .content-card {
      background-color: white;
      border-radius: 10px;
      box-shadow: 0 2px 8px rgba(23, 43, 77, 0.07);
      overflow: hidden;
      transition: all 0.2s ease;
      height: 100%;
      display: flex;
      flex-direction: column;
    }
    
    .content-card:hover {
      transform: translateY(-3px);
      box-shadow: 0 4px 12px rgba(23, 43, 77, 0.12);
    }
    
    .content-card-img {
      height: 160px;
      background-color: #edf1f7;
      background-size: cover;
      background-position: center;
      position: relative;
    }
    
    .content-card-platform {
      position: absolute;
      top: 10px;
      right: 10px;
      z-index: 1;
    }
    
    .content-card-body {
      padding: 1rem;
      flex-grow: 1;
      display: flex;
      flex-direction: column;
    }
    
    .content-card-title {
      font-weight: 600;
      font-size: 1.05rem;
      margin-bottom: 0.75rem;
      line-height: 1.4;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
    
    .content-card-title a {
      color: var(--text-primary);
      text-decoration: none;
    }
    
    .content-card-title a:hover {
      color: var(--brand-secondary);
    }
    
    .content-card-footer {
      padding: 0.75rem 1rem;
      background-color: #f9f9fb;
      border-top: 1px solid var(--ui-border);
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    
    .content-card-date {
      font-size: 0.85rem;
      color: var(--text-secondary);
    }
    
    /* Planned content list */
    .planned-list {
      background-color: white;
      border-radius: 10px;
      overflow: hidden;
    }
    
    .planned-item {
      display: flex;
      align-items: center;
      padding: 1rem;
      border-bottom: 1px solid var(--ui-border);
      transition: background-color 0.2s ease;
    }
    
    .planned-item:last-child {
      border-bottom: none;
    }
    
    .planned-item:hover {
      background-color: var(--ui-hover);
    }
    
    .planned-item-topic {
      font-weight: 500;
      margin-bottom: 0.35rem;
      flex-grow: 1;
    }
    
    .planned-item-topic a {
      color: var(--text-primary);
      text-decoration: none;
    }
    
    .planned-item-topic a:hover {
      color: var(--brand-secondary);
    }
    
    .planned-item-meta {
      display: flex;
      align-items: center;
      font-size: 0.85rem;
      color: var(--text-secondary);
    }
    
    .planned-item-date {
      display: flex;
      align-items: center;
      margin-right: 1rem;
    }
    
    .planned-item-date i {
      margin-right: 5px;
    }
    
    .planned-item-action {
      white-space: nowrap;
      margin-left: 1rem;
    }
    
    .empty-message {
      text-align: center;
      padding: 2rem;
      color: var(--text-secondary);
      background-color: white;
      border-radius: 10px;
    }
  </style>
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark">
    <div class="container">
      <a class="navbar-brand" href="/"><i class="bi bi-lightning-charge"></i> Content Manager</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ms-auto">
          <li class="nav-item">
            <a class="nav-link active" href="/"><i class="bi bi-house"></i> Dashboard</a>
          </li>
          <% if (locals.isAuthenticated) { %>
            <li class="nav-item">
              <a class="nav-link" href="/account"><i class="bi bi-person"></i> Account</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/support"><i class="bi bi-question-circle"></i> Support</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/logout"><i class="bi bi-box-arrow-right"></i> Logout</a>
            </li>
          <% } else { %>
            <li class="nav-item">
              <a class="nav-link" href="/login"><i class="bi bi-box-arrow-in-right"></i> Login</a>
            </li>
          <% } %>
        </ul>
        <button class="btn btn-outline-light ms-2" data-bs-toggle="modal" data-bs-target="#monthlyPlanModal">
          Monthly Content
        </button>
      </div>
    </div>
  </nav>

  <div class="container main-content">
    <div class="row mb-4">
      <div class="col d-flex justify-content-between align-items-center">
        <h2 class="mb-0">Content Dashboard</h2>
        <div class="header-actions">
          <button class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#addContentModal">
            <i class="bi bi-plus-lg"></i> Add New Content
          </button>
        </div>
      </div>
    </div>
    
    <div class="content-filters mb-4">
      <a href="/?platform=" class="filter-link <%= !platform ? 'active' : '' %>">All</a>
      <a href="/?platform=wordpress" class="filter-link <%= platform === 'wordpress' ? 'active' : '' %>">WordPress</a>
      <a href="/?platform=facebook" class="filter-link <%= platform === 'facebook' ? 'active' : '' %>">Facebook</a>
      <a href="/?platform=instagram" class="filter-link <%= platform === 'instagram' ? 'active' : '' %>">Instagram</a>
    </div>
    
    <% if (typeof error !== 'undefined') { %>
      <div class="alert alert-danger mb-4"><%= error %></div>
    <% } %>
    
    <% 
      // Group content by status
      const plannedContent = content.filter(item => item.status === 'planned');
      const generatedContent = content.filter(item => item.status === 'generated');
      const approvedContent = content.filter(item => item.status === 'approved');
      const publishedContent = content.filter(item => item.status === 'published');
      
      // Helper function to format dates
      function formatDate(dateString) {
        const date = new Date(dateString);
        return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });
      }
    %>
    
    <!-- Planned Content Section -->
    <div class="content-section">
      <div class="section-header">
        <h3 class="section-title">Planned Content</h3>
        <span class="count-badge"><%= plannedContent.length %></span>
      </div>
      
      <% if (plannedContent.length > 0) { %>
        <div class="card">
          <div class="card-body p-0">
            <table class="table content-table mb-0">
              <thead>
                <tr>
                  <th class="ps-3" style="width: 40%">TITLE</th>
                  <th style="width: 15%">PLATFORM</th>
                  <th style="width: 15%">PUBLISH DATE</th>
                  <th class="text-end pe-3" style="width: 30%">ACTIONS</th>
                </tr>
              </thead>
              <tbody>
                <% plannedContent.forEach(item => { %>
                  <tr data-id="<%= item.id %>">
                    <td class="ps-3 title-cell">
                      <a href="/content/<%= item.id %>" class="content-link" title="<%= item.topic %>">
                        <%= item.topic.length > 50 ? item.topic.substring(0, 50) + '...' : item.topic %>
                      </a>
                      <% if (item.topic.length > 50) { %>
                        <button class="show-more-btn" data-bs-toggle="tooltip" data-bs-placement="top" title="<%= item.topic %>">
                          <i class="bi bi-info-circle"></i>
                        </button>
                      <% } %>
                    </td>
                    <td>
                      <span class="platform-pill"><%= item.platform.charAt(0).toUpperCase() + item.platform.slice(1) %></span>
                    </td>
                    <td>
                      <%= formatDate(item.publishDate) %>
                    </td>
                    <td class="text-end pe-3 action-buttons">
                      <button class="btn btn-sm btn-primary generate-btn" data-id="<%= item.id %>">
                        <i class="bi bi-lightning-charge"></i> Generate
                      </button>
                    </td>
                  </tr>
                <% }) %>
              </tbody>
            </table>
          </div>
        </div>
      <% } else { %>
        <div class="empty-message">
          <i class="bi bi-clipboard-plus"></i>
          <p>No planned content yet. Click "Add New Content" to start planning.</p>
        </div>
      <% } %>
    </div>
    
    <!-- Generated Content Section -->
    <div class="content-section">
      <div class="section-header">
        <h3 class="section-title">Generated Content</h3>
        <span class="count-badge"><%= generatedContent.length %></span>
      </div>
      
      <% if (generatedContent.length > 0) { %>
        <div class="content-grid">
          <% generatedContent.forEach(item => { %>
            <div class="content-card">
              <div class="content-card-img" style="background-image: url('<%= item.imageUrl ? item.imageUrl : '/img/placeholder-1024x1024.png' %>');">
                <div class="content-card-platform">
                  <span class="platform-pill"><%= item.platform.charAt(0).toUpperCase() + item.platform.slice(1) %></span>
                </div>
              </div>
              <div class="content-card-body">
                <h4 class="content-card-title">
                  <a href="/content/<%= item.id %>"><%= item.topic %></a>
                </h4>
              </div>
              <div class="content-card-footer">
                <div class="content-card-date"><%= formatDate(item.publishDate) %></div>
                <div>
                  <button class="btn btn-sm btn-success approve-btn" data-id="<%= item.id %>">
                    <i class="bi bi-check-lg"></i> Approve
                  </button>
                </div>
              </div>
            </div>
          <% }) %>
        </div>
      <% } else { %>
        <div class="empty-message">
          <i class="bi bi-lightning-charge"></i>
          <p>No generated content available.</p>
        </div>
      <% } %>
    </div>
    
    <!-- Approved Content Section -->
    <div class="content-section">
      <div class="section-header">
        <h3 class="section-title">Approved Content</h3>
        <span class="count-badge"><%= approvedContent.length %></span>
      </div>
      
      <% if (approvedContent.length > 0) { %>
        <div class="content-grid">
          <% approvedContent.forEach(item => { %>
            <div class="content-card">
              <div class="content-card-img" style="background-image: url('<%= item.imageUrl ? item.imageUrl : '/img/placeholder-1024x1024.png' %>');">
                <div class="content-card-platform">
                  <span class="platform-pill"><%= item.platform.charAt(0).toUpperCase() + item.platform.slice(1) %></span>
                </div>
              </div>
              <div class="content-card-body">
                <h4 class="content-card-title">
                  <a href="/content/<%= item.id %>"><%= item.topic %></a>
                </h4>
              </div>
              <div class="content-card-footer">
                <div class="content-card-date"><%= formatDate(item.publishDate) %></div>
                <div>
                  <button class="btn btn-sm btn-primary publish-btn" data-id="<%= item.id %>">
                    <i class="bi bi-arrow-up-right-circle"></i> Publish
                  </button>
                </div>
              </div>
            </div>
          <% }) %>
        </div>
      <% } else { %>
        <div class="empty-message">
          <i class="bi bi-check-circle"></i>
          <p>No approved content waiting to be published.</p>
        </div>
      <% } %>
    </div>
    
    <!-- Published Content Section -->
    <div class="content-section">
      <div class="section-header">
        <h3 class="section-title">Published Content</h3>
        <span class="count-badge"><%= publishedContent.length %></span>
      </div>
      
      <% if (publishedContent.length > 0) { %>
        <div class="content-grid">
          <% publishedContent.forEach(item => { %>
            <div class="content-card">
              <div class="content-card-img" style="background-image: url('<%= item.imageUrl ? item.imageUrl : '/img/placeholder-1024x1024.png' %>');">
                <div class="content-card-platform">
                  <span class="platform-pill"><%= item.platform.charAt(0).toUpperCase() + item.platform.slice(1) %></span>
                </div>
              </div>
              <div class="content-card-body">
                <h4 class="content-card-title">
                  <a href="/content/<%= item.id %>"><%= item.topic %></a>
                </h4>
              </div>
              <div class="content-card-footer">
                <div class="content-card-date">Published: <%= formatDate(item.publishDate) %></div>
                <div>
                  <button class="btn btn-sm btn-outline-secondary view-btn" data-id="<%= item.id %>">
                    <i class="bi bi-eye"></i> View
                  </button>
                </div>
              </div>
            </div>
          <% }) %>
        </div>
      <% } else { %>
        <div class="empty-message">
          <i class="bi bi-arrow-up-circle"></i>
          <p>No published content yet.</p>
        </div>
      <% } %>
    </div>
  </div>

  <!-- Add Content Modal -->
  <div class="modal fade" id="addContentModal" tabindex="-1">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Add New Content</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="contentForm">
            <div class="mb-3">
              <label for="topic" class="form-label">Topic</label>
              <input type="text" class="form-control" id="topic" required>
            </div>
            <div class="mb-3">
              <label for="keywords" class="form-label">Keywords (comma separated)</label>
              <input type="text" class="form-control" id="keywords">
            </div>
            <div class="mb-3">
              <label for="platform" class="form-label">Platform</label>
              <select class="form-select" id="platform" required>
                <option value="">Select Platform</option>
                <option value="wordpress">WordPress</option>
                <option value="facebook">Facebook</option>
                <option value="instagram">Instagram</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="clientId" class="form-label">Client Profile</label>
              <select class="form-select" id="clientId">
                <option value="">-- Select Client --</option>
                <!-- Will be populated via JavaScript -->
              </select>
            </div>
            <div class="mb-3">
              <label for="publishDate" class="form-label">Publish Date</label>
              <input type="date" class="form-control" id="publishDate" required>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" id="saveContent">Save Content</button>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Monthly Plan Modal -->
  <div class="modal fade" id="monthlyPlanModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Plan Monthly Content Package</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="monthlyPlanForm">
            <div class="row mb-3">
              <div class="col-md-6">
                <label for="monthlyTheme" class="form-label">Monthly Theme</label>
                <input type="text" class="form-control" id="monthlyTheme" placeholder="e.g., Smart Home Security Solutions" required>
              </div>
              <div class="col-md-6">
                <label for="packageSize" class="form-label">Package Size</label>
                <select class="form-select" id="packageSize" required>
                  <option value="8">8 pieces per month</option>
                  <option value="12" selected>12 pieces per month</option>
                  <option value="16">16 pieces per month</option>
                </select>
              </div>
            </div>
            
            <div class="row mb-3">
              <div class="col-md-6">
                <label for="startDate" class="form-label">Start Date</label>
                <input type="date" class="form-control" id="startDate" required>
              </div>
              <div class="col-md-6">
                <label for="keywords" class="form-label">Keywords (comma separated)</label>
                <input type="text" class="form-control" id="monthlyKeywords" placeholder="security, smart home, automation">
              </div>
            </div>
            
            <div class="mb-3">
              <label for="planClientId" class="form-label">Client Profile</label>
              <select class="form-select" id="planClientId">
                <option value="">-- Select Client --</option>
                <!-- Will be populated via JavaScript -->
              </select>
            </div>
            
            <div class="mb-3">
              <label class="form-label">Distribution Across Platforms</label>
              <div class="row">
                <div class="col-md-4">
                  <div class="input-group mb-3">
                    <span class="input-group-text">WordPress</span>
                    <input type="number" class="form-control platform-count" id="wordpressCount" value="4" min="0" required>
                  </div>
                </div>
                <div class="col-md-4">
                  <div class="input-group mb-3">
                    <span class="input-group-text">Facebook</span>
                    <input type="number" class="form-control platform-count" id="facebookCount" value="4" min="0" required>
                  </div>
                </div>
                <div class="col-md-4">
                  <div class="input-group mb-3">
                    <span class="input-group-text">Instagram</span>
                    <input type="number" class="form-control platform-count" id="instagramCount" value="4" min="0" required>
                  </div>
                </div>
              </div>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" id="generatePlan">Generate Plan</button>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  <script src="/js/scripts.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Initialize tooltips
      const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
      const tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl)
      });
      
      // Make the entire row clickable to navigate to content page
      const contentRows = document.querySelectorAll('.content-table tbody tr');
      contentRows.forEach(row => {
        row.addEventListener('click', (event) => {
          // Don't navigate if clicking on a button or link
          if (!event.target.closest('button') && !event.target.closest('a')) {
            const id = row.getAttribute('data-id');
            if (id) {
              window.location.href = `/content/${id}`;
            }
          }
        });
      });
      
      // Fetch clients for dropdown
      fetchClientsForDropdown();
      
      // Add event listener to save content button
      document.getElementById('saveContent').addEventListener('click', createContent);
      
      // Add event listener to generate plan button
      document.getElementById('generatePlan')?.addEventListener('click', generateMonthlyPlan);
      
      // Initialize listeners for platform count fields
      initPlatformCountListeners();
    });
    
    // Function to fetch clients and populate dropdown
    async function fetchClientsForDropdown() {
      try {
        const response = await fetch('/api/clients');
        const clients = await response.json();
        
        const clientDropdown = document.getElementById('clientId');
        if (clientDropdown) {
          clientDropdown.innerHTML = '<option value="">-- Select Client --</option>';
          
          clients.filter(client => client.isActive).forEach(client => {
            const option = document.createElement('option');
            option.value = client.id;
            option.textContent = client.name;
            clientDropdown.appendChild(option);
          });
        }
      } catch (error) {
        console.error('Error fetching clients:', error);
      }
    }
    
    // Function to create new content
    async function createContent() {
      const topic = document.getElementById('topic').value.trim();
      const keywords = document.getElementById('keywords').value.trim();
      const platform = document.getElementById('platform').value;
      const clientId = document.getElementById('clientId').value;
      const publishDate = document.getElementById('publishDate').value;
      
      if (!topic || !platform || !publishDate) {
        alert('Please fill in all required fields');
        return;
      }
      
      const contentData = {
        topic,
        keywords,
        platform,
        clientId: clientId || null,
        publishDate
      };
      
      try {
        const response = await fetch('/api/content', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(contentData)
        });
        
        if (!response.ok) {
          throw new Error('Failed to create content');
        }
        
        // Close modal and reload page
        const modal = bootstrap.Modal.getInstance(document.getElementById('addContentModal'));
        modal.hide();
        location.reload();
      } catch (error) {
        console.error('Error creating content:', error);
        alert('Failed to create content: ' + error.message);
      }
    }
    
    // Function to handle monthly plan generation
    async function generateMonthlyPlan() {
      const monthlyTheme = document.getElementById('monthlyTheme').value.trim();
      const packageSize = parseInt(document.getElementById('packageSize').value);
      const startDate = document.getElementById('startDate').value;
      const keywords = document.getElementById('monthlyKeywords').value.trim();
      
      const wordpressCount = parseInt(document.getElementById('wordpressCount').value);
      const facebookCount = parseInt(document.getElementById('facebookCount').value);
      const instagramCount = parseInt(document.getElementById('instagramCount').value);
      
      // Client ID for the monthly plan
      const clientId = document.getElementById('planClientId')?.value || null;
      
      // Validate
      if (!monthlyTheme || !packageSize || !startDate) {
        alert('Please fill in all required fields');
        return;
      }
      
      // Validate distribution counts
      if (wordpressCount + facebookCount + instagramCount !== packageSize) {
        alert(`Distribution counts must add up to package size (${packageSize})`);
        return;
      }
      
      const planData = {
        monthlyTheme,
        packageSize,
        startDate,
        keywords,
        clientId,
        distribution: {
          wordpress: wordpressCount,
          facebook: facebookCount,
          instagram: instagramCount
        }
      };
      
      try {
        const response = await fetch('/api/content/monthly-plan', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(planData)
        });
        
        if (!response.ok) {
          throw new Error('Failed to create monthly plan');
        }
        
        // Close modal and reload page
        const modal = bootstrap.Modal.getInstance(document.getElementById('monthlyPlanModal'));
        modal.hide();
        location.reload();
      } catch (error) {
        console.error('Error creating monthly plan:', error);
        alert('Failed to create monthly plan: ' + error.message);
      }
    }
    
    // Initialize listeners for platform count fields
    function initPlatformCountListeners() {
      const platformCountInputs = document.querySelectorAll('.platform-count');
      const packageSizeSelect = document.getElementById('packageSize');
      
      if (!platformCountInputs.length || !packageSizeSelect) return;
      
      // Update platform counts when package size changes
      packageSizeSelect.addEventListener('change', () => {
        const packageSize = parseInt(packageSizeSelect.value);
        const perPlatform = Math.floor(packageSize / 3);
        const remainder = packageSize % 3;
        
        document.getElementById('wordpressCount').value = perPlatform + (remainder > 0 ? 1 : 0);
        document.getElementById('facebookCount').value = perPlatform + (remainder > 1 ? 1 : 0);
        document.getElementById('instagramCount').value = perPlatform;
      });
      
      // Validate total count matches package size
      platformCountInputs.forEach(input => {
        input.addEventListener('change', () => {
          const packageSize = parseInt(packageSizeSelect.value);
          const wordpressCount = parseInt(document.getElementById('wordpressCount').value);
          const facebookCount = parseInt(document.getElementById('facebookCount').value);
          const instagramCount = parseInt(document.getElementById('instagramCount').value);
          
          const total = wordpressCount + facebookCount + instagramCount;
          
          if (total !== packageSize) {
            document.getElementById('platformCountWarning').innerText = 
              `Warning: Platform distribution (${total}) doesn't match package size (${packageSize})`;
          } else {
            document.getElementById('platformCountWarning').innerText = '';
          }
        });
      });
    }
  </script>
</body>
</html> 