<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Content Detail - <%= content.topic %></title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/styles.css">
  <style>
    .content-preview {
      background: #fff;
      border-radius: 8px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      padding: 2rem;
      margin-bottom: 2rem;
    }
    .content-image {
      max-width: 100%;
      border-radius: 8px;
      margin-bottom: 1.5rem;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
    }
    .content-text {
      white-space: pre-line;
    }
    .platform-badge {
      font-size: 0.9rem;
      text-transform: capitalize;
      margin-left: 10px;
    }
  </style>
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
    <div class="container">
      <a class="navbar-brand" href="/">Acetec Content Manager</a>
    </div>
  </nav>

  <div class="container mt-4">
    <div class="row">
      <div class="col-md-12">
        <div class="card">
          <div class="card-header d-flex justify-content-between align-items-center">
            <div>
              <h5><%= content.topic %> 
                <span class="badge bg-info platform-badge"><%= content.platform %></span>
                <% if (content.status === 'planned') { %>
                  <span class="badge bg-secondary">Planned</span>
                <% } else if (content.status === 'generated') { %>
                  <span class="badge bg-warning">Generated</span>
                <% } else if (content.status === 'approved') { %>
                  <span class="badge bg-success">Approved</span>
                <% } else if (content.status === 'published') { %>
                  <span class="badge bg-primary">Published</span>
                <% } %>
              </h5>
              <small>Publish Date: <%= new Date(content.publishDate).toLocaleDateString() %></small>
              <% if (content.keywords) { %>
                <br>
                <small>Keywords: <%= content.keywords %></small>
              <% } %>
            </div>
            <div>
              <a href="/" class="btn btn-outline-primary">Back to List</a>
              <% if (content.status === 'planned') { %>
                <button class="btn btn-primary generate-btn" data-id="<%= content.id %>">Generate</button>
              <% } else if (content.status === 'generated') { %>
                <button class="btn btn-success approve-btn" data-id="<%= content.id %>">Approve</button>
                <button class="btn btn-warning edit-btn">Edit</button>
              <% } else if (content.status === 'approved') { %>
                <button class="btn btn-primary publish-btn" data-id="<%= content.id %>">Publish</button>
              <% } else if (content.status === 'published') { %>
                <span class="badge bg-success">Published</span>
              <% } %>
            </div>
          </div>
          <div class="card-body">
            <% if (content.status === 'planned') { %>
              <div class="alert alert-info">
                Content has not been generated yet. Click the Generate button to create content.
              </div>
            <% } else { %>
              <div class="content-preview">
                <% if (content.imageUrl) { %>
                  <img src="<%= content.imageUrl %>" class="content-image" alt="<%= content.topic %>">
                <% } %>
                
                <div class="content-text">
                  <%= content.content %>
                </div>
              </div>
              
              <% if (content.status === 'generated') { %>
                <form id="editContentForm">
                  <div class="mb-3">
                    <label for="editContent" class="form-label">Edit Content</label>
                    <textarea class="form-control" id="editContent" rows="10"><%= content.content %></textarea>
                  </div>
                  <div class="text-end">
                    <button type="button" class="btn btn-secondary cancel-edit-btn">Cancel</button>
                    <button type="button" class="btn btn-primary save-edit-btn" data-id="<%= content.id %>">Save Changes</button>
                  </div>
                </form>
              <% } %>
            <% } %>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Hide edit form initially
      const editForm = document.getElementById('editContentForm');
      if (editForm) {
        editForm.style.display = 'none';
      }
      
      // Generate button
      const generateBtn = document.querySelector('.generate-btn');
      if (generateBtn) {
        generateBtn.addEventListener('click', function() {
          const id = this.getAttribute('data-id');
          this.disabled = true;
          this.textContent = 'Generating...';
          
          fetch(`/api/content/${id}/generate`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            }
          })
          .then(response => {
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            return response.json();
          })
          .then(data => {
            // Reload page to show generated content
            window.location.reload();
          })
          .catch(error => {
            console.error('Error:', error);
            alert('Failed to generate content. Please try again.');
            this.disabled = false;
            this.textContent = 'Generate';
          });
        });
      }
      
      // Approve button
      const approveBtn = document.querySelector('.approve-btn');
      if (approveBtn) {
        approveBtn.addEventListener('click', function() {
          const id = this.getAttribute('data-id');
          this.disabled = true;
          this.textContent = 'Approving...';
          
          fetch(`/api/content/${id}/approve`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            }
          })
          .then(response => {
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            return response.json();
          })
          .then(data => {
            // Reload page to show approved status
            window.location.reload();
          })
          .catch(error => {
            console.error('Error:', error);
            alert('Failed to approve content. Please try again.');
            this.disabled = false;
            this.textContent = 'Approve';
          });
        });
      }
      
      // Edit buttons
      const editBtn = document.querySelector('.edit-btn');
      const cancelEditBtn = document.querySelector('.cancel-edit-btn');
      const saveEditBtn = document.querySelector('.save-edit-btn');
      const contentPreview = document.querySelector('.content-preview');
      
      if (editBtn && editForm && contentPreview) {
        editBtn.addEventListener('click', function() {
          // Show edit form, hide preview
          editForm.style.display = 'block';
          contentPreview.style.display = 'none';
          this.style.display = 'none';
        });
        
        cancelEditBtn.addEventListener('click', function() {
          // Hide edit form, show preview
          editForm.style.display = 'none';
          contentPreview.style.display = 'block';
          editBtn.style.display = 'inline-block';
        });
        
        saveEditBtn.addEventListener('click', function() {
          const id = this.getAttribute('data-id');
          const updatedContent = document.getElementById('editContent').value;
          
          fetch(`/api/content/${id}/edit`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ content: updatedContent })
          })
          .then(response => {
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            return response.json();
          })
          .then(data => {
            // Reload page to show updated content
            window.location.reload();
          })
          .catch(error => {
            console.error('Error:', error);
            alert('Failed to save content changes. Please try again.');
          });
        });
      }
      
      // Publish button
      const publishBtn = document.querySelector('.publish-btn');
      if (publishBtn) {
        publishBtn.addEventListener('click', function() {
          const id = this.getAttribute('data-id');
          this.disabled = true;
          this.textContent = 'Publishing...';
          
          fetch(`/api/content/${id}/publish`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            }
          })
          .then(response => {
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            return response.json();
          })
          .then(data => {
            console.log('Published:', data);
            // Show success message
            alert(`Content published successfully to ${data.content.platform}!`);
            // Reload page to show published status
            window.location.reload();
          })
          .catch(error => {
            console.error('Error:', error);
            alert('Failed to publish content. Please try again.');
            this.disabled = false;
            this.textContent = 'Publish';
          });
        });
      }
    });
  </script>
</body>
</html> 