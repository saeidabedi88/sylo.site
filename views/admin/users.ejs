<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User Management | Acetec Content Manager</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css">
  <style>
    :root {
      /* Primary Brand Colors */
      --brand-primary: #2b5197;      /* Deeper blue - main brand color */
      --brand-secondary: #4071cc;    /* Medium blue - secondary brand color */
      --brand-accent: #55cfcb;       /* Teal accent color - for highlights */
      
      /* UI Colors */
      --ui-background: #f9fafb;      /* Very light blue-gray for background */
      --ui-card: #ffffff;            /* White for cards */
      --ui-border: #e4e9f2;          /* Light gray for borders */
      --ui-hover: #f2f6fb;           /* Very light blue for hover states */
      
      /* Text Colors */
      --text-primary: #1e1e1e;       /* Dark gray for primary text */
      --text-secondary: #6e7891;     /* Medium gray for secondary text */
    }
    
    body {
      background-color: var(--ui-background);
      color: var(--text-primary);
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    }
    
    .navbar {
      background-color: var(--brand-primary) !important;
      box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }
    
    .page-title {
      font-size: 1.75rem;
      font-weight: 500;
      line-height: 1.4;
      margin-bottom: 20px;
      color: var(--text-primary);
      letter-spacing: -0.02em;
    }
    
    .card {
      background-color: var(--ui-card);
      border-radius: 10px;
      box-shadow: 0 3px 12px rgba(23, 43, 77, 0.08);
      margin-bottom: 22px;
      border: none;
      transition: box-shadow 0.3s ease, transform 0.2s ease;
    }
    
    .card:hover {
      box-shadow: 0 5px 15px rgba(23, 43, 77, 0.12);
    }
    
    .table > :not(caption) > * > * {
      padding: 0.75rem 1rem;
    }
    
    .table thead th {
      font-weight: 600;
      color: var(--text-secondary);
      border-bottom: 1px solid var(--ui-border);
      text-transform: uppercase;
      font-size: 0.8rem;
      letter-spacing: 0.5px;
    }
    
    .table tbody tr {
      transition: all 0.2s ease;
      border-bottom: 1px solid var(--ui-border);
    }
    
    .table tbody tr:hover {
      background-color: var(--ui-hover);
    }
    
    .btn {
      border-radius: 8px;
      padding: 8px 16px;
      font-weight: 500;
      transition: all 0.25s ease;
    }
    
    .btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
    
    .btn-primary {
      background-color: var(--brand-primary);
      border-color: var(--brand-primary);
    }
    
    .btn-primary:hover, .btn-primary:focus {
      background-color: var(--brand-secondary);
      border-color: var(--brand-secondary);
    }
    
    .role-badge {
      display: inline-block;
      padding: 4px 10px;
      border-radius: 50px;
      font-size: 0.8rem;
      font-weight: 500;
    }
    
    .role-admin {
      background-color: #e0f0ff;
      color: #1a5fb4;
    }
    
    .role-client {
      background-color: #dcf5e8;
      color: #0d6e49;
    }
    
    .last-login {
      font-size: 0.85rem;
      color: var(--text-secondary);
    }
  </style>
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark">
    <div class="container">
      <a class="navbar-brand" href="/"><i class="bi bi-lightning-charge"></i> Content Manager</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ms-auto">
          <li class="nav-item">
            <a class="nav-link" href="/"><i class="bi bi-house"></i> Dashboard</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/account"><i class="bi bi-person"></i> Account</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/support"><i class="bi bi-question-circle"></i> Support</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/logout"><i class="bi bi-box-arrow-right"></i> Logout</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>

  <div class="container my-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
      <h1 class="page-title">User Management</h1>
      <a href="/admin/users/add" class="btn btn-primary">
        <i class="bi bi-person-plus"></i> Add New User
      </a>
    </div>
    
    <div class="card">
      <div class="card-body p-0">
        <table class="table mb-0">
          <thead>
            <tr>
              <th style="width: 40%">USERNAME</th>
              <th style="width: 20%">ROLE</th>
              <th style="width: 25%">LAST LOGIN</th>
              <th style="width: 15%">ACTIONS</th>
            </tr>
          </thead>
          <tbody>
            <% if (users && users.length > 0) { %>
              <% users.forEach(user => { %>
                <tr>
                  <td><%= user.username %></td>
                  <td>
                    <span class="role-badge role-<%= user.role %>">
                      <%= user.role.charAt(0).toUpperCase() + user.role.slice(1) %>
                    </span>
                  </td>
                  <td class="last-login">
                    <% if (user.last_login) { %>
                      <%= new Date(user.last_login).toLocaleString() %>
                    <% } else { %>
                      Never
                    <% } %>
                  </td>
                  <td>
                    <div class="btn-group" role="group">
                      <a href="/admin/users/edit/<%= user.id %>" class="btn btn-sm btn-outline-secondary" data-bs-toggle="tooltip" title="Edit user">
                        <i class="bi bi-pencil"></i>
                      </a>
                      <button class="btn btn-sm btn-outline-danger ms-2 reset-pwd-btn" data-id="<%= user.id %>" data-bs-toggle="tooltip" title="Reset password">
                        <i class="bi bi-key"></i>
                      </button>
                    </div>
                  </td>
                </tr>
              <% }); %>
            <% } else { %>
              <tr>
                <td colspan="4" class="text-center p-4">No users found</td>
              </tr>
            <% } %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
  
  <!-- Reset Password Modal -->
  <div class="modal fade" id="resetPasswordModal" tabindex="-1">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Reset Password</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="resetPasswordForm">
            <input type="hidden" id="userId" name="userId">
            <div class="mb-3">
              <label for="newPassword" class="form-label">New Password</label>
              <input type="password" class="form-control" id="newPassword" name="newPassword" required>
            </div>
            <div class="mb-3">
              <label for="confirmPassword" class="form-label">Confirm Password</label>
              <input type="password" class="form-control" id="confirmPassword" required>
              <div id="passwordMismatch" class="invalid-feedback">
                Passwords do not match
              </div>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" id="savePasswordBtn">Reset Password</button>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Initialize tooltips
      const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
      const tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl)
      });
      
      // Reset password functionality
      const resetPasswordModal = new bootstrap.Modal(document.getElementById('resetPasswordModal'));
      const resetPwdBtns = document.querySelectorAll('.reset-pwd-btn');
      const resetPasswordForm = document.getElementById('resetPasswordForm');
      const userIdInput = document.getElementById('userId');
      const newPasswordInput = document.getElementById('newPassword');
      const confirmPasswordInput = document.getElementById('confirmPassword');
      const passwordMismatch = document.getElementById('passwordMismatch');
      const savePasswordBtn = document.getElementById('savePasswordBtn');
      
      resetPwdBtns.forEach(btn => {
        btn.addEventListener('click', function() {
          const userId = this.getAttribute('data-id');
          userIdInput.value = userId;
          resetPasswordForm.reset();
          resetPasswordModal.show();
        });
      });
      
      // Password confirmation validation
      confirmPasswordInput.addEventListener('input', function() {
        if (this.value !== newPasswordInput.value) {
          this.classList.add('is-invalid');
          passwordMismatch.style.display = 'block';
        } else {
          this.classList.remove('is-invalid');
          passwordMismatch.style.display = 'none';
        }
      });
      
      // Save new password
      savePasswordBtn.addEventListener('click', function() {
        if (newPasswordInput.value !== confirmPasswordInput.value) {
          confirmPasswordInput.classList.add('is-invalid');
          passwordMismatch.style.display = 'block';
          return;
        }
        
        // Submit the form via AJAX
        fetch(`/admin/users/reset-password/${userIdInput.value}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ newPassword: newPasswordInput.value })
        })
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          return response.json();
        })
        .then(data => {
          resetPasswordModal.hide();
          alert('Password reset successfully');
        })
        .catch(error => {
          console.error('Error:', error);
          alert('Failed to reset password. Please try again.');
        });
      });
    });
  </script>
</body>
</html> 